{"version":3,"sources":["components/spinner/spinner.svg","components/spinner/spinner.jsx","components/current-weather/current-weather.jsx","components/item-card/item-card.jsx","components/hourly-forecast/hourly-forecast.jsx","components/daily-forecast/daily-forecast.jsx","components/weather-card/weather-card.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["StyledWrapper","styled","div","StyledImg","img","StyledError","Spinner","error","src","spinner","alt","onClick","window","location","reload","StyledContainer","StyledTopRow","RightContainer","StyledRefreshButton","props","disabled","StyledConditions","StyledTemp","StyledInfoCol","CurrentWeather","convertTime","daysArray","forceRefetch","forceRefresh","iconURL","weatherData","popSum","minTempArray","maxTempArray","i","length","pop","push","main","temp_min","temp_max","item","clouds","all","date","dt","description","weather","feelsLike","Math","round","feels_like","humidity","image","icon","imageCode","id","lastUpdated","pressure","sunrise","sys","sunset","temp","tempMin","min","tempMax","max","visibility","floor","windSpeed","wind","speed","windDeg","deg","faMapMarkerAlt","title","name","country","faClock","faSyncAlt","faTemperatureLow","faTemperatureHigh","faThermometerHalf","faCloud","faUmbrella","faTint","faLongArrowAltDown","faBinoculars","faWind","faArrowAltCircleDown","transform","rotate","faSun","faMoon","StyledCard","Row","ItemCard","timeOrDate","faCloudRain","StyledDiv","HourlyForecast","forecastData","hourlyArray","result","list","slice","map","index","DailyForecast","convertDate","dailyArray","cloudsSum","tempSum","mid","ceil","j","substring","WeatherCard","ICON_URL","process","dayOfYear","timestamp","Date","setFullYear","getFullYear","yearFirstDay","getTime","filter","GlobalStyle","createGlobalStyle","App","useState","setError","lat","setLat","latLoaded","setLatLoaded","lon","setLon","lonLoaded","setLonLoaded","setWeatherData","weatherLoaded","setWeatherLoaded","setForecastData","forecastLoaded","setForecastLoaded","setForceRefetch","API_URL","API_KEY","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetchWeatherData","fetch","then","res","json","cod","message","localStorage","setItem","JSON","stringify","fetchForecastData","hasOwnProperty","parse","getItem","now","time","toLocaleDateString","weekday","day","month","year","toLocaleTimeString","hour12","hour","minute","setTimeout","clearTimeout","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2ac2dc57.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spinner.e558538c.svg\";","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport spinner from \"./spinner.svg\"\r\n\r\nconst StyledWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`\r\n\r\nconst StyledImg = styled.img`\r\n\twidth: 80px;\r\n\theight: 80px;\r\n\r\n\tmargin: 32px;\r\n\r\n\tstroke: #ccc;\r\n\r\n\tanimation: spin 1s linear infinite;\r\n\r\n\t@keyframes spin {\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n`\r\n\r\nconst StyledError = styled.div`\r\n\ttext-align: center;\r\n\r\n\tspan {\r\n\t\ttext-decoration: underline;\r\n\t\tcursor: pointer;\r\n\t}\r\n`\r\n\r\nconst Spinner = ({ error }) => {\r\n\tconst reloadPage = () => {\r\n\t\twindow.location.reload()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<StyledWrapper>\r\n\t\t\t<StyledImg src={spinner} alt=\"\" />\r\n\t\t\t{error ? (\r\n\t\t\t\t<StyledError>\r\n\t\t\t\t\t<div>{error}</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tYou may need to <span onClick={reloadPage}>refresh</span> this page.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</StyledError>\r\n\t\t\t) : (\r\n\t\t\t\t<></>\r\n\t\t\t)}\r\n\t\t</StyledWrapper>\r\n\t)\r\n}\r\n\r\nexport default Spinner\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport {\r\n\tfaArrowAltCircleDown,\r\n\tfaBinoculars,\r\n\tfaClock,\r\n\tfaCloud,\r\n\tfaLongArrowAltDown,\r\n\tfaMapMarkerAlt,\r\n\tfaMoon,\r\n\tfaSun,\r\n\tfaSyncAlt,\r\n\tfaTemperatureLow,\r\n\tfaTemperatureHigh,\r\n\tfaThermometerHalf,\r\n\tfaTint,\r\n\tfaUmbrella,\r\n\tfaWind,\r\n} from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst StyledContainer = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr;\r\n\tgrid-template-rows: auto 1fr 1fr 1fr;\r\n\r\n\tpadding: 8px;\r\n\tmargin: 8px;\r\n\r\n\tborder-radius: 4px;\r\n\tbox-shadow: var(--border-shadow);\r\n\r\n\ttransition: 0.2s ease;\r\n\r\n\t&:hover {\r\n\t\tbox-shadow: var(--small-shadow);\r\n\t}\r\n\r\n\t// Small devices (landscape phones, 576px and up)\r\n\t@media (min-width: 576px) {\r\n\t\tgrid-template-columns: 1fr 1fr;\r\n\t\tgrid-template-rows: auto 1fr 1fr;\r\n\t}\r\n\r\n\t// Large devices (desktops, 992px and up)\r\n\t@media (min-width: 992px) {\r\n\t\tgrid-template-columns: 1fr 1fr;\r\n\t\tgrid-template-rows: auto 1fr 1fr;\r\n\t}\r\n`\r\n\r\nconst StyledTopRow = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\r\n\t// Small devices (landscape phones, 576px and up)\r\n\t@media (min-width: 576px) {\r\n\t\tgrid-column: span 2;\r\n\t}\r\n`\r\n\r\nconst RightContainer = styled.div`\r\n\tdisplay: flex;\r\n`\r\n\r\nconst StyledRefreshButton = styled.div`\r\n\theight: fit-content;\r\n\r\n\tmargin: 0 0 0 8px;\r\n\tpadding: 0;\r\n\r\n\tborder: none;\r\n\tbackground: none;\r\n\tcolor: var(--text);\r\n\tfont-size: 1em;\r\n\r\n\tcursor: pointer;\r\n\tpointer-events: initial;\r\n\r\n\topacity: ${(props) => (props.disabled ? \"0.1\" : \"1\")};\r\n\tpointer-events: ${(props) => (props.disabled ? \"none\" : \"auto\")};\r\n`\r\n\r\nconst StyledConditions = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\r\n\t// Small devices (landscape phones, 576px and up)\r\n\t@media (min-width: 576px) {\r\n\t\tgrid-column: span 2;\r\n\t}\r\n\r\n\t// Large devices (desktops, 992px and up)\r\n\t@media (min-width: 992px) {\r\n\t\tgrid-column: span 2;\r\n\t}\r\n`\r\n\r\nconst StyledTemp = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\r\n\tfont-size: 6rem;\r\n\tfont-weight: 700;\r\n`\r\n\r\nconst StyledInfoCol = styled.div`\r\n\tjustify-self: stretch;\r\n\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\r\n\t// Medium devices (tablets, 768px and up)\r\n\t@media (min-width: 768px) {\r\n\t\tjustify-content: center;\r\n\t\talign-items: unset;\r\n\t\tmin-width: 256px;\r\n\t}\r\n\r\n\t// Large devices (desktops, 992px and up)\r\n\t@media (min-width: 992px) {\r\n\t\tmin-width: 256px;\r\n\t}\r\n`\r\n\r\nconst CurrentWeather = ({\r\n\tconvertTime,\r\n\tdaysArray,\r\n\tforceRefetch,\r\n\tforceRefresh,\r\n\ticonURL,\r\n\tweatherData,\r\n}) => {\r\n\tlet popSum = 0\r\n\tlet minTempArray = []\r\n\tlet maxTempArray = []\r\n\r\n\tfor (let i = 0; i < daysArray[0].length; i++) {\r\n\t\tpopSum += daysArray[0][i].pop\r\n\t\tminTempArray.push(daysArray[0][i].main.temp_min)\r\n\t\tmaxTempArray.push(daysArray[0][i].main.temp_max)\r\n\t}\r\n\r\n\tlet item = {\r\n\t\tclouds: weatherData.clouds.all,\r\n\t\tdate: weatherData.dt,\r\n\t\tdescription: weatherData.weather[0].description,\r\n\t\tfeelsLike: Math.round(weatherData.main.feels_like),\r\n\t\thumidity: weatherData.main.humidity,\r\n\t\timage: weatherData.weather[0].icon,\r\n\t\timageCode: weatherData.weather[0].id,\r\n\t\tlastUpdated: weatherData.dt,\r\n\t\tpop: Math.round((popSum / daysArray[0].length) * 100),\r\n\t\tpressure: weatherData.main.pressure,\r\n\t\tmain: weatherData.weather[0].main,\r\n\t\tsunrise: weatherData.sys.sunrise,\r\n\t\tsunset: weatherData.sys.sunset,\r\n\t\ttemp: Math.round(weatherData.main.temp),\r\n\t\ttempMin: Math.round(Math.min(...minTempArray)),\r\n\t\ttempMax: Math.round(Math.max(...maxTempArray)),\r\n\t\tvisibility: Math.floor(weatherData.visibility / 1000),\r\n\t\twindSpeed: weatherData.wind.speed,\r\n\t\twindDeg: weatherData.wind.deg,\r\n\t}\r\n\r\n\treturn (\r\n\t\t<StyledContainer>\r\n\t\t\t<StyledTopRow>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faMapMarkerAlt} title=\"Location\" />{\" \"}\r\n\t\t\t\t\t{weatherData.name},{weatherData.sys.country}\r\n\t\t\t\t</div>\r\n\t\t\t\t<RightContainer title={forceRefetch ? \"Next refresh in 5 min\" : \"\"}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faClock} title=\"Last updated\" />{\" \"}\r\n\t\t\t\t\t\t{convertTime(weatherData.dt)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<StyledRefreshButton\r\n\t\t\t\t\t\tonClick={forceRefresh}\r\n\t\t\t\t\t\tdisabled={forceRefetch ? true : false}\r\n\t\t\t\t\t\ttitle=\"Refresh\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faSyncAlt} />\r\n\t\t\t\t\t</StyledRefreshButton>\r\n\t\t\t\t</RightContainer>\r\n\t\t\t</StyledTopRow>\r\n\t\t\t<StyledConditions>\r\n\t\t\t\t<img src={`${iconURL}/${item.image}@2x.png`} alt={item.description} />\r\n\t\t\t\t<StyledTemp>\r\n\t\t\t\t\t<div>{item.temp}°</div>\r\n\t\t\t\t</StyledTemp>\r\n\t\t\t</StyledConditions>\r\n\t\t\t<StyledInfoCol>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faTemperatureLow} title=\"Low\" /> {item.tempMin}\r\n\t\t\t\t\t° / <FontAwesomeIcon icon={faTemperatureHigh} title=\"High\" />{\" \"}\r\n\t\t\t\t\t{item.tempMax}°\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faThermometerHalf} title=\"Feels like\" /> Feels\r\n\t\t\t\t\tlike {item.feelsLike}°\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faCloud} title=\"Cloud coverage\" /> Cloud\r\n\t\t\t\t\tcoverage: {item.clouds}%\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\ticon={faUmbrella}\r\n\t\t\t\t\t\ttitle=\"Probability of precipitation\"\r\n\t\t\t\t\t/>{\" \"}\r\n\t\t\t\t\tPrecipitation: {item.pop}%\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faTint} title=\"Humidity\" /> Humidity:{\" \"}\r\n\t\t\t\t\t{item.humidity}%\r\n\t\t\t\t</div>\r\n\t\t\t</StyledInfoCol>\r\n\t\t\t<StyledInfoCol>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\ticon={faLongArrowAltDown}\r\n\t\t\t\t\t\ttitle=\"Atmospheric pressure\"\r\n\t\t\t\t\t/>{\" \"}\r\n\t\t\t\t\tPressure: {item.pressure}hPa\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faBinoculars} title=\"Visibility\" /> Visibility:{\" \"}\r\n\t\t\t\t\t{item.visibility}km\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faWind} title=\"Wind speed/direction\" /> Wind:{\" \"}\r\n\t\t\t\t\t{item.windSpeed}\r\n\t\t\t\t\tm/s{\" \"}\r\n\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\ticon={faArrowAltCircleDown}\r\n\t\t\t\t\t\ttransform={{ rotate: item.windDeg }}\r\n\t\t\t\t\t\ttitle=\"Wind direction\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faSun} title=\"Sunrise\" /> Sunrise:{\" \"}\r\n\t\t\t\t\t{convertTime(item.sunrise)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<FontAwesomeIcon icon={faMoon} title=\"Sunset\" /> Sunset:{\" \"}\r\n\t\t\t\t\t{convertTime(item.sunset)}\r\n\t\t\t\t</div>\r\n\t\t\t</StyledInfoCol>\r\n\t\t</StyledContainer>\r\n\t)\r\n}\r\n\r\nexport default CurrentWeather\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faCloud, faCloudRain } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst StyledCard = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\r\n\tborder-radius: 4px;\r\n\tbox-shadow: var(--border-shadow);\r\n\r\n\tpadding: 8px;\r\n\tmargin: 8px;\r\n\r\n\ttransition: 0.2s ease;\r\n\r\n\timg {\r\n\t\tmax-width: 100px;\r\n\t\theight: auto;\r\n\t}\r\n\r\n\t&:hover {\r\n\t\tbox-shadow: var(--small-shadow);\r\n\t}\r\n`\r\n\r\nconst Row = styled.div`\r\n\tdisplay: flex;\r\n\r\n\tdiv {\r\n\t\tmargin: 0 2px;\r\n\t}\r\n`\r\n\r\nconst ItemCard = ({ iconURL, item, timeOrDate }) => {\r\n\treturn (\r\n\t\t<StyledCard>\r\n\t\t\t<div>{timeOrDate(item.date)}</div>\r\n\t\t\t<img src={`${iconURL}/${item.image}@2x.png`} alt={item.description} />\r\n\t\t\t<div>\r\n\t\t\t\t{Math.round(item.temp)}° – {item.main}\r\n\t\t\t</div>\r\n\t\t\t<Row>\r\n\t\t\t\t{item.clouds > 10 ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faCloud} title=\"Cloud coverage\" />{\" \"}\r\n\t\t\t\t\t\t{item.clouds}%\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<></>\r\n\t\t\t\t)}\r\n\t\t\t\t{item.pop > 0 ? (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<FontAwesomeIcon\r\n\t\t\t\t\t\t\ticon={faCloudRain}\r\n\t\t\t\t\t\t\ttitle=\"Probability of precipitation\"\r\n\t\t\t\t\t\t/>{\" \"}\r\n\t\t\t\t\t\t{item.pop}%\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<></>\r\n\t\t\t\t)}\r\n\t\t\t</Row>\r\n\t\t</StyledCard>\r\n\t)\r\n}\r\n\r\nexport default ItemCard\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport ItemCard from \"../item-card/item-card.jsx\"\r\n\r\nconst StyledDiv = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-rows: repeat(4, 1fr);\r\n\tgrid-template-columns: initial;\r\n\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\r\n\t// Small devices (landscape phones, 576px and up)\r\n\t@media (min-width: 576px) {\r\n\t\tgrid-template-rows: repeat(2, 1fr);\r\n\t\tgrid-template-columns: repeat(2, 1fr);\r\n\t}\r\n\r\n\t// Large devices (desktops, 992px and up)\r\n\t@media (min-width: 992px) {\r\n\t\tgrid-template-rows: initial;\r\n\t\tgrid-template-columns: repeat(4, 1fr);\r\n\t}\r\n`\r\n\r\nconst HourlyForecast = ({ convertTime, forecastData, iconURL }) => {\r\n\tlet hourlyArray = []\r\n\r\n\tfor (let i = 0; i < 5; i++) {\r\n\t\tlet result = {\r\n\t\t\tclouds: forecastData.list[i].clouds.all,\r\n\t\t\tdate: forecastData.list[i].dt,\r\n\t\t\tdescription: forecastData.list[i].weather[0].description,\r\n\t\t\timage: forecastData.list[i].weather[0].icon,\r\n\t\t\tpop: Math.round(forecastData.list[i].pop * 100),\r\n\t\t\tmain: forecastData.list[i].weather[0].main,\r\n\t\t\ttemp: Math.round(forecastData.list[i].main.temp),\r\n\t\t}\r\n\t\thourlyArray.push(result)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<StyledDiv>\r\n\t\t\t{hourlyArray.slice(0, 4).map((item, index) => (\r\n\t\t\t\t<ItemCard\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\ttimeOrDate={convertTime}\r\n\t\t\t\t\titem={item}\r\n\t\t\t\t\ticonURL={iconURL}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</StyledDiv>\r\n\t)\r\n}\r\n\r\nexport default HourlyForecast\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport ItemCard from \"../item-card/item-card.jsx\"\r\n\r\nconst StyledDiv = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: initial;\r\n\tgrid-template-rows: repeat(4, 1fr);\r\n\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\r\n\t// Small devices (landscape phones, 576px and up)\r\n\t@media (min-width: 576px) {\r\n\t\tgrid-template-rows: repeat(2, 1fr);\r\n\t\tgrid-template-columns: repeat(2, 1fr);\r\n\t}\r\n\r\n\t// Large devices (desktops, 992px and up)\r\n\t@media (min-width: 992px) {\r\n\t\tgrid-template-columns: repeat(4, 1fr);\r\n\t\tgrid-template-rows: initial;\r\n\t}\r\n`\r\n\r\nconst DailyForecast = ({ daysArray, convertDate, iconURL }) => {\r\n\tlet dailyArray = []\r\n\tfor (let i = 1; i < 5; i++) {\r\n\t\tlet cloudsSum = 0\r\n\t\tlet popSum = 0\r\n\t\tlet tempSum = 0\r\n\t\tlet mid = Math.ceil(daysArray[i].length / 2)\r\n\t\tfor (let j = 0; j < daysArray[i].length; j++) {\r\n\t\t\tif (!daysArray[i][j].dt) {\r\n\t\t\t\twindow.location.reload()\r\n\t\t\t}\r\n\t\t\tcloudsSum += daysArray[i][j].clouds.all\r\n\t\t\tpopSum += daysArray[i][j].pop\r\n\t\t\ttempSum += daysArray[i][j].main.temp\r\n\t\t}\r\n\r\n\t\tlet result = {\r\n\t\t\tclouds: Math.round(cloudsSum / daysArray[i].length),\r\n\t\t\tdate: daysArray[i][mid].dt,\r\n\t\t\tdescription: daysArray[i][mid].weather[0].description,\r\n\t\t\timage:\r\n\t\t\t\tdaysArray[i][mid].weather[0].icon.substring(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tdaysArray[i][mid].weather[0].icon.length - 1\r\n\t\t\t\t) + \"d\",\r\n\t\t\tpop: Math.round((popSum / daysArray[i].length) * 100),\r\n\t\t\tmain: daysArray[i][mid].weather[0].main,\r\n\t\t\ttemp: Math.round(tempSum / daysArray[i].length),\r\n\t\t}\r\n\r\n\t\tdailyArray.push(result)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<StyledDiv>\r\n\t\t\t{dailyArray.slice(0, 4).map((item, index) => (\r\n\t\t\t\t<ItemCard\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\ttimeOrDate={convertDate}\r\n\t\t\t\t\titem={item}\r\n\t\t\t\t\ticonURL={iconURL}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</StyledDiv>\r\n\t)\r\n}\r\n\r\nexport default DailyForecast\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport CurrentWeather from \"../current-weather/current-weather.jsx\"\r\nimport HourlyForecast from \"../hourly-forecast/hourly-forecast.jsx\"\r\nimport DailyForecast from \"../daily-forecast/daily-forecast.jsx\"\r\n\r\nconst StyledWrapper = styled.div``\r\n\r\nconst WeatherCard = ({\r\n\tconvertDate,\r\n\tconvertTime,\r\n\tforceRefetch,\r\n\tforceRefresh,\r\n\tforecastData,\r\n\tweatherData,\r\n}) => {\r\n\tconst ICON_URL = process.env.REACT_APP_WEATHER_ICON_URL\r\n\tlet daysArray = []\r\n\r\n\t// day of the year\r\n\tconst dayOfYear = (date) => {\r\n\t\tlet timestamp = new Date().setFullYear(new Date().getFullYear(), 0, 1)\r\n\t\tlet yearFirstDay = Math.floor(timestamp / 86400000)\r\n\t\treturn Math.ceil(date.getTime() / 86400000) - yearFirstDay\r\n\t}\r\n\r\n\tfor (let i = 0; i < 6; i++) {\r\n\t\tdaysArray.push(\r\n\t\t\tforecastData.list.filter(\r\n\t\t\t\t(item) =>\r\n\t\t\t\t\tdayOfYear(new Date(item.dt * 1000)) === dayOfYear(new Date()) + i\r\n\t\t\t)\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<StyledWrapper>\r\n\t\t\t<CurrentWeather\r\n\t\t\t\tconvertDate={convertDate}\r\n\t\t\t\tconvertTime={convertTime}\r\n\t\t\t\tdaysArray={daysArray}\r\n\t\t\t\tforceRefetch={forceRefetch}\r\n\t\t\t\tforceRefresh={forceRefresh}\r\n\t\t\t\ticonURL={ICON_URL}\r\n\t\t\t\tweatherData={weatherData}\r\n\t\t\t/>\r\n\t\t\t<HourlyForecast\r\n\t\t\t\tconvertTime={convertTime}\r\n\t\t\t\tforecastData={forecastData}\r\n\t\t\t\ticonURL={ICON_URL}\r\n\t\t\t/>\r\n\t\t\t<DailyForecast\r\n\t\t\t\tconvertDate={convertDate}\r\n\t\t\t\tdaysArray={daysArray}\r\n\t\t\t\ticonURL={ICON_URL}\r\n\t\t\t/>\r\n\t\t</StyledWrapper>\r\n\t)\r\n}\r\n\r\nexport default WeatherCard\r\n","import React, { useEffect, useState } from \"react\"\nimport styled, { createGlobalStyle } from \"styled-components\"\n\nimport Spinner from \"./components/spinner/spinner.jsx\"\nimport WeatherCard from \"./components/weather-card/weather-card.jsx\"\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    min-height: 100%;\n\n    background-color: var(--background);\n    color: var(--text);\n\n    :root{\n      --border-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.1),\n\t\t0px 0px 0px 1px rgba(0, 0, 0, 0.15);\n      --small-shadow: 0px 0px 16px 0px rgba(0, 0, 0, 0.15),\n\t\t\t0px 4px 8px -4px rgba(0, 0, 0, 0.5);\n      --big-shadow: 0px 0px 32px 0px rgba(0, 0, 0, 0.15),\n\t\t\t0px 8px 24px -8px rgba(0, 0, 0, 0.5);\n    }\n\n    // Light theme\n    @media (prefers-color-scheme: light) {\n      :root {\n        --text: #333;\n        --background: #fff;\n      }\n    }\n    // Dark theme\n    @media (prefers-color-scheme: dark) {\n      :root{\n        --text: #ccc;\n        --background: #222;\n      }\n\n      background-color: var(--background);\n      color: var(--text);\n    }\n  }\n\n  body {\n    width: 100%;\n\n    margin: 0;\n\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n\n    // Medium devices (tablets, 768px and up)\n    @media (min-width: 768px) {\n      width: unset;\n    }\n  }\n\n  #root{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`\n\nconst StyledContainer = styled.div`\n\tmargin: 0px;\n\tpadding: 8px;\n\n\twidth: 100%;\n\n\tborder-radius: 8px;\n\tbox-shadow: var(--big-shadow);\n\n\ttransition: 0.2s ease;\n\n\t// Small devices (landscape phones, 576px and up)\n\t@media (min-width: 576px) {\n\t\tmargin: 32px;\n\t}\n\n\t// Medium devices (tablets, 768px and up)\n\t@media (min-width: 768px) {\n\t\tmax-width: 768px;\n\t}\n\n\t// Large devices (desktops, 992px and up)\n\t@media (min-width: 992px) {\n\t\twidth: unset;\n\t\tmax-width: 992px;\n\t}\n`\n\nfunction App() {\n\tconst [error, setError] = useState(null)\n\tconst [lat, setLat] = useState()\n\tconst [latLoaded, setLatLoaded] = useState(false)\n\tconst [lon, setLon] = useState()\n\tconst [lonLoaded, setLonLoaded] = useState(false)\n\tconst [weatherData, setWeatherData] = useState([])\n\tconst [weatherLoaded, setWeatherLoaded] = useState(false)\n\tconst [forecastData, setForecastData] = useState([])\n\tconst [forecastLoaded, setForecastLoaded] = useState(false)\n\tconst [forceRefetch, setForceRefetch] = useState(false)\n\n\tconst API_URL = process.env.REACT_APP_WEATHER_API_URL\n\tconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY\n\n\t// Format to 00:00\n\tconst convertTime = (time) => {\n\t\tconst timeOptions = {\n\t\t\thour12: false,\n\t\t\thour: \"numeric\",\n\t\t\tminute: \"numeric\",\n\t\t}\n\t\treturn new Date(time * 1000).toLocaleTimeString(\"en-GB\", timeOptions)\n\t}\n\n\t// Format to wd, dd/mm/yyyy\n\tconst convertDate = (time) => {\n\t\tconst timeOptions = {\n\t\t\tweekday: \"short\",\n\t\t\tday: \"numeric\",\n\t\t\tmonth: \"numeric\",\n\t\t\tyear: \"numeric\",\n\t\t}\n\t\treturn new Date(time * 1000).toLocaleDateString(\"en-GB\", timeOptions)\n\t}\n\n\t// Force data refetch\n\tconst forceRefresh = () => {\n\t\tsetForceRefetch(true)\n\t\tsetTimeout(() => {\n\t\t\tsetForceRefetch(false)\n\t\t\tclearTimeout()\n\t\t}, 300000)\n\t}\n\n\t// Get weather data\n\tuseEffect(() => {\n\t\tnavigator.geolocation.getCurrentPosition(function (position) {\n\t\t\t// Get latitude\n\t\t\tsetLat(position.coords.latitude)\n\t\t\tsetLatLoaded(true)\n\t\t\t// Get longitude\n\t\t\tsetLon(position.coords.longitude)\n\t\t\tsetLonLoaded(true)\n\t\t})\n\t})\n\n\tuseEffect(() => {\n\t\tconst fetchWeatherData = () => {\n\t\t\tfetch(\n\t\t\t\t`${API_URL}/weather/?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`\n\t\t\t)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((result) => {\n\t\t\t\t\tif (result.cod !== 200) {\n\t\t\t\t\t\tsetError(result.message)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetWeatherData(result)\n\t\t\t\t\t\tlocalStorage.setItem(\"weatherData\", JSON.stringify(result))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t}\n\t\tconst fetchForecastData = () => {\n\t\t\tfetch(\n\t\t\t\t`${API_URL}/forecast?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`\n\t\t\t)\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((result) => {\n\t\t\t\t\tif (result.cod !== \"200\") {\n\t\t\t\t\t\tsetError(result.message)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetForecastData(result)\n\t\t\t\t\t\tlocalStorage.setItem(\"forecastData\", JSON.stringify(result))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t}\n\n\t\tif (\n\t\t\t!localStorage.hasOwnProperty(\"weatherData\") ||\n\t\t\t!localStorage.hasOwnProperty(\"forecastData\")\n\t\t) {\n\t\t\tif (latLoaded && lonLoaded) {\n\t\t\t\tfetchForecastData()\n\t\t\t\tfetchWeatherData()\n\t\t\t\tsetWeatherLoaded(true)\n\t\t\t\tsetForecastLoaded(true)\n\t\t\t\tsetError()\n\t\t\t} else {\n\t\t\t\tsetError(\n\t\t\t\t\t\"Need both coordinates to fetch weather data. Please allow location access.\"\n\t\t\t\t)\n\t\t\t}\n\t\t} else if (forceRefetch) {\n\t\t\tfetchForecastData()\n\t\t\tfetchWeatherData()\n\t\t\tsetWeatherLoaded(true)\n\t\t\tsetForecastLoaded(true)\n\t\t} else {\n\t\t\tif (\n\t\t\t\tJSON.parse(localStorage.getItem(\"forecastData\")).cod === \"200\" &&\n\t\t\t\tJSON.parse(localStorage.getItem(\"weatherData\")).cod === 200\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\tDate.now() -\n\t\t\t\t\t\tJSON.parse(localStorage.getItem(\"weatherData\")).dt * 1000 >\n\t\t\t\t\t1000 * 60 * 60 * 2\n\t\t\t\t) {\n\t\t\t\t\tif (latLoaded && lonLoaded) {\n\t\t\t\t\t\tfetchWeatherData()\n\t\t\t\t\t\tfetchForecastData()\n\t\t\t\t\t\tsetWeatherLoaded(true)\n\t\t\t\t\t\tsetForecastLoaded(true)\n\t\t\t\t\t\tsetError()\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetError(\n\t\t\t\t\t\t\t\"This app needs your coordinates to fetch weather data. Please allow location access.\"\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsetWeatherData(JSON.parse(localStorage.getItem(\"weatherData\")))\n\t\t\t\t\tsetForecastData(JSON.parse(localStorage.getItem(\"forecastData\")))\n\t\t\t\t\tsetWeatherLoaded(true)\n\t\t\t\t\tsetForecastLoaded(true)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsetError(`weather error: ${\n\t\t\t\t\tJSON.parse(localStorage.getItem(\"weatherData\")).message\n\t\t\t\t}\n          forecast error: ${\n\t\t\t\t\t\tJSON.parse(localStorage.getItem(\"forecastData\")).message\n\t\t\t\t\t}`)\n\t\t\t}\n\t\t}\n\t}, [\n\t\tAPI_KEY,\n\t\tAPI_URL,\n\t\tlon,\n\t\tlat,\n\t\tlatLoaded,\n\t\tlonLoaded,\n\t\tweatherData.dt,\n\t\tforceRefetch,\n\t])\n\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t{weatherLoaded &&\n\t\t\tweatherData.cod === 200 &&\n\t\t\tforecastLoaded &&\n\t\t\tforecastData.cod === \"200\" ? (\n\t\t\t\t<StyledContainer>\n\t\t\t\t\t<WeatherCard\n\t\t\t\t\t\tconvertDate={convertDate}\n\t\t\t\t\t\tconvertTime={convertTime}\n\t\t\t\t\t\tforceRefetch={forceRefetch}\n\t\t\t\t\t\tforceRefresh={forceRefresh}\n\t\t\t\t\t\tforecastData={forecastData}\n\t\t\t\t\t\tweatherData={weatherData}\n\t\t\t\t\t/>\n\t\t\t\t</StyledContainer>\n\t\t\t) : (\n\t\t\t\t<Spinner error={error} />\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}